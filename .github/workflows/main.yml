# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]



# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Clone repository
        uses: actions/checkout@v2
      
      - name: Uses nodesjs
        uses: actions/setup-node@v1
      
      - name: Install dependencies
        run: yarn install --silent

      
      - name: Generate a build
        run: yarn build --silent

      - name: Share artifact inside workflow
        uses: actions/upload-artifact@v1
        with:
          name: build
          path: build
      
      # deploy the files to the server
      - name: Get copy of repo
        uses: actions/checkout@master
  
      - name: Get the artifact
        uses: actions/download-artifact@v1
        with:
          name: build
      
      # copy the build files to the server
      - name: Copy files to server
        uses: appleboy/scp-action@master
      
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          source: "build/*"
          target: ${{ secrets.PROJECT_PATH }}
